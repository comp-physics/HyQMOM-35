"""
    M2CS4_35(M4)

Compute central and standardized moments from raw moments.

Converts 35 raw moments to central (C4) and standardized (S4) moments.

# Arguments
- `M4`: 35-element vector of raw moments

# Returns
- `C4`: 35-element vector of central moments
- `S4`: 35-element vector of standardized moments
"""
function M2CS4_35(M4)
    # Precomputed linear indices for extracting 35 moments from 5×5×5 array
    # Manually computed: sub2ind([5 5 5], i, j, k) = i + 5*(j-1) + 25*(k-1)
    idx_c = [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 21,
             26, 27, 28, 29, 51, 52, 53, 76, 77, 101, 31, 32, 33, 36, 37,
             41, 56, 57, 81, 61]
    
    # Extract individual moments for symbolic function call
    M000 = M4[1]
    M100 = M4[2]; M200 = M4[3]; M300 = M4[4]; M400 = M4[5]
    M010 = M4[6]; M110 = M4[7]; M210 = M4[8]; M310 = M4[9]
    M020 = M4[10]; M120 = M4[11]; M220 = M4[12]
    M030 = M4[13]; M130 = M4[14]
    M040 = M4[15]
    M001 = M4[16]; M101 = M4[17]; M201 = M4[18]; M301 = M4[19]
    M002 = M4[20]; M102 = M4[21]; M202 = M4[22]
    M003 = M4[23]; M103 = M4[24]
    M004 = M4[25]
    M011 = M4[26]; M111 = M4[27]; M211 = M4[28]
    M021 = M4[29]; M121 = M4[30]
    M031 = M4[31]
    M012 = M4[32]; M112 = M4[33]
    M013 = M4[34]
    M022 = M4[35]
    
    # Compute central moments using autogenerated function
    C = M4toC4_3D(M000, M100, M200, M300, M400, M010, M110, M210, M310,
                  M020, M120, M220, M030, M130, M040, M001, M101, M201,
                  M301, M002, M102, M202, M003, M103, M004, M011, M111,
                  M211, M021, M121, M031, M012, M112, M013, M022)
    
    # Extract variances for standardization (indices from 3D array)
    sC200 = sqrt(max(C[3,1,1], eps()))
    sC020 = sqrt(max(C[1,3,1], eps()))
    sC002 = sqrt(max(C[1,1,3], eps()))
    
    # Compute standardized moments efficiently using array operations
    S = zeros(5,5,5)
    S[1,1,1] = 1.0  # S000 = 1
    S[3,1,1] = 1.0  # S200 = 1
    S[1,3,1] = 1.0  # S020 = 1
    S[1,1,3] = 1.0  # S002 = 1
    
    # Cross-correlations (second order)
    S[2,2,1] = C[2,2,1]/(sC200*sC020)  # S110
    S[2,1,2] = C[2,1,2]/(sC200*sC002)  # S101
    S[1,2,2] = C[1,2,2]/(sC020*sC002)  # S011
    
    # Third order moments
    S[4,1,1] = C[4,1,1]/sC200^3  # S300
    S[3,2,1] = C[3,2,1]/(sC200^2*sC020)  # S210
    S[3,1,2] = C[3,1,2]/(sC200^2*sC002)  # S201
    S[2,3,1] = C[2,3,1]/(sC200*sC020^2)  # S120
    S[2,2,2] = C[2,2,2]/(sC200*sC020*sC002)  # S111
    S[2,1,3] = C[2,1,3]/(sC200*sC002^2)  # S102
    S[1,4,1] = C[1,4,1]/sC020^3  # S030
    S[1,3,2] = C[1,3,2]/(sC020^2*sC002)  # S021
    S[1,2,3] = C[1,2,3]/(sC020*sC002^2)  # S012
    S[1,1,4] = C[1,1,4]/sC002^3  # S003
    
    # Fourth order moments
    S[5,1,1] = C[5,1,1]/sC200^4  # S400
    S[4,2,1] = C[4,2,1]/(sC200^3*sC020)  # S310
    S[4,1,2] = C[4,1,2]/(sC200^3*sC002)  # S301
    S[3,3,1] = C[3,3,1]/(sC200^2*sC020^2)  # S220
    S[3,2,2] = C[3,2,2]/(sC200^2*sC020*sC002)  # S211
    S[3,1,3] = C[3,1,3]/(sC200^2*sC002^2)  # S202
    S[2,4,1] = C[2,4,1]/(sC200*sC020^3)  # S130
    S[2,3,2] = C[2,3,2]/(sC200*sC020^2*sC002)  # S121
    S[2,2,3] = C[2,2,3]/(sC200*sC020*sC002^2)  # S112
    S[2,1,4] = C[2,1,4]/(sC200*sC002^3)  # S103
    S[1,5,1] = C[1,5,1]/sC020^4  # S040
    S[1,4,2] = C[1,4,2]/(sC020^3*sC002)  # S031
    S[1,3,3] = C[1,3,3]/(sC020^2*sC002^2)  # S022
    S[1,2,4] = C[1,2,4]/(sC020*sC002^3)  # S013
    S[1,1,5] = C[1,1,5]/sC002^4  # S004
    
    # Extract 35 moments using precomputed indices
    C4 = zeros(size(M4))
    C4[:] = C[idx_c]
    S4 = S[idx_c]
    
    return C4, S4
end
